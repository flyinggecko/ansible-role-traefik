# tasks file for kibatic.traefik
---
- name: create traefik group
  group:
    name: traefik
    state: present
    system: yes

- name: create traefik user
  user:
    name: traefik
    state: present
    system: yes
    group: traefik
    create_home: yes
    home: /opt/traefik/

- name: Create traefik systemd unit
  template:
    src: "{{ traefik_systemd_unit_template }}.j2"
    dest: "{{ traefik_systemd_unit_dest }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart traefik

- name: Ensure install directory exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ traefik_install_dir }}"

- name: Ensure config directory exists
  file:
    path: "{{ item }}"
    state: directory
    owner: traefik
    group: traefik
  with_items:
    - "{{ traefik_config_dir }}"
    - "{{ traefik_config_dir }}/acme"
    - "{{ traefik_dynamic_config_dir }}"

- name: Copy traefik config file
  template:
    src: "{{ traefik_template }}"
    dest: "{{ traefik_config_file }}"
    owner: root
    group: traefik
    mode: 0740
  notify:
    - Restart traefik

- name: Copy traefik dynamic configuration files
  copy:
    dest: "{{ traefik_dynamic_config_dir }}/{{ item.key }}"
    content: |-
      {{ item.value }}
    mode: 0640
    owner: traefik
    group: traefik
  loop: "{{ traefik_dynamic_configurations | dict2items }}"

- name: Ensure acme.json exists and has right permissions
  file:
    path: "{{ traefik_config_dir }}/acme/acme.json"
    state: touch
    owner: traefik
    group: traefik
    mode: 0600

- name: Ensure traefik service is stopped before traefik update
  service:
    name: traefik
    state: stopped
    enabled: yes
  when: traefik_update | bool == True

- name: Download Traefik binary
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0755
    force: "{{ traefik_update | bool }}"
  with_items:
    - url: "{{ traefik_binary_url }}"
      dest: "{{ traefik_bin_path }}"
  when: "'tar.gz' not in traefik_binary_url"

- name: Download Traefik archive
  block:
    - name: Download Traefik archive
      unarchive:
        src: "{{ item.url }}"
        dest: "{{ item.dest }}"
        # force the download of the archive in case of an update.
        creates: "{{ '/dev/nulltraefik' if traefik_update | bool else traefik_bin_path }}"
        remote_src: yes
        owner: root
        group: root
        mode: 0755
        extra_opts:
          - traefik  # only extract traefik binary.
      with_items:
        - url: "{{ traefik_binary_url }}"
          dest: "{{ traefik_bin_path | dirname }}"
      register: archive_download

    - name: Rename traefik binary
      command: "mv {{ traefik_bin_path | dirname }}/traefik {{ traefik_bin_path }}"
      when: 'archive_download is changed and traefik_bin_path | dirname + "/traefik" != traefik_bin_path'
  when: "'tar.gz' in traefik_binary_url"

- name: Ensure traefik service is enabled and running
  systemd:
    name: traefik
    # state: restarted
    enabled: yes
    daemon_reload: yes
